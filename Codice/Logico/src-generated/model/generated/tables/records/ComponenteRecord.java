/*
 * This file is generated by jOOQ.
 */
package model.generated.tables.records;


import model.generated.tables.ComponenteTables;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Row1;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ComponenteRecord extends TableRecordImpl<ComponenteRecord> implements Record1<String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>COMPONENTE.NOME</code>.
     */
    public void setNome(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>COMPONENTE.NOME</code>.
     */
    public String getNome() {
        return (String) get(0);
    }

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row1<String> fieldsRow() {
        return (Row1) super.fieldsRow();
    }

    @Override
    public Row1<String> valuesRow() {
        return (Row1) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ComponenteTables.COMPONENTE.NOME;
    }

    @Override
    public String component1() {
        return getNome();
    }

    @Override
    public String value1() {
        return getNome();
    }

    @Override
    public ComponenteRecord value1(String value) {
        setNome(value);
        return this;
    }

    @Override
    public ComponenteRecord values(String value1) {
        value1(value1);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ComponenteRecord
     */
    public ComponenteRecord() {
        super(ComponenteTables.COMPONENTE);
    }

    /**
     * Create a detached, initialised ComponenteRecord
     */
    public ComponenteRecord(String nome) {
        super(ComponenteTables.COMPONENTE);

        setNome(nome);
        resetChangedOnNotNull();
    }
}
