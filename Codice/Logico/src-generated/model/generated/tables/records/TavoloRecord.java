/*
 * This file is generated by jOOQ.
 */
package model.generated.tables.records;


import model.generated.tables.Tavolo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TavoloRecord extends UpdatableRecordImpl<TavoloRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TAVOLO.NOME</code>.
     */
    public void setNome(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>TAVOLO.NOME</code>.
     */
    public Integer getNome() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TAVOLO.POSTI_MASSIMI</code>.
     */
    public void setPostiMassimi(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>TAVOLO.POSTI_MASSIMI</code>.
     */
    public Integer getPostiMassimi() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>TAVOLO.STATO</code>.
     */
    public void setStato(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>TAVOLO.STATO</code>.
     */
    public Integer getStato() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Tavolo.TAVOLO.NOME;
    }

    @Override
    public Field<Integer> field2() {
        return Tavolo.TAVOLO.POSTI_MASSIMI;
    }

    @Override
    public Field<Integer> field3() {
        return Tavolo.TAVOLO.STATO;
    }

    @Override
    public Integer component1() {
        return getNome();
    }

    @Override
    public Integer component2() {
        return getPostiMassimi();
    }

    @Override
    public Integer component3() {
        return getStato();
    }

    @Override
    public Integer value1() {
        return getNome();
    }

    @Override
    public Integer value2() {
        return getPostiMassimi();
    }

    @Override
    public Integer value3() {
        return getStato();
    }

    @Override
    public TavoloRecord value1(Integer value) {
        setNome(value);
        return this;
    }

    @Override
    public TavoloRecord value2(Integer value) {
        setPostiMassimi(value);
        return this;
    }

    @Override
    public TavoloRecord value3(Integer value) {
        setStato(value);
        return this;
    }

    @Override
    public TavoloRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TavoloRecord
     */
    public TavoloRecord() {
        super(Tavolo.TAVOLO);
    }

    /**
     * Create a detached, initialised TavoloRecord
     */
    public TavoloRecord(Integer nome, Integer postiMassimi, Integer stato) {
        super(Tavolo.TAVOLO);

        setNome(nome);
        setPostiMassimi(postiMassimi);
        setStato(stato);
        resetChangedOnNotNull();
    }
}
